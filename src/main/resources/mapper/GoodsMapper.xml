<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sk.mall.dao.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.sk.mall.entity.Goods">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="goodsName" jdbcType="VARCHAR" property="goodsName"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="upTime" jdbcType="TIMESTAMP" property="upTime"/>
        <result column="category" jdbcType="INTEGER" property="category"/>
        <result column="categoryName" jdbcType="VARCHAR" property="categoryName"/>
        <result column="detailCate" jdbcType="VARCHAR" property="detailCate"/>
        <result column="isSale" jdbcType="INTEGER" property="isSale"/>
        <association property="activity" select="com.sk.mall.dao.ActivityMapper.getActivityById"
                     javaType="com.sk.mall.entity.Activity" column="activityId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sk.mall.entity.Goods">
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    </resultMap>

    <resultMap extends="ResultMapWithBLOBs" id="ResultMapIncludeImage" type="com.sk.mall.entity.Goods">
        <collection property="imagePaths" javaType="ArrayList" ofType="com.sk.mall.entity.ImagePath"
                    select="com.sk.mall.dao.ImagePathMapper.getImagesByGoodsId" column="id"/>

    </resultMap>

    <resultMap extends="ResultMapIncludeImage" id="ResultMapIncludeComment" type="com.sk.mall.entity.Goods">
        <collection property="comments" javaType="ArrayList" ofType="com.sk.mall.entity.Comment"
                    select="com.sk.mall.dao.CommentMapper.getByGoodsId" column="id"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, goodsName, price, num, upTime, category, categoryName, detailCate, activityId, isSale
    </sql>
    <sql id="Blob_Column_List">
        description
    </sql>

    <select id="selectFavByUserId" resultMap="ResultMapIncludeImage">
        select g.*
        from goods g,
             collection c
        where g.id = c.goodsId
          and c.userId = #{userId}
          and isSale = 1
    </select>

    <select id="getById" parameterType="java.lang.Integer" resultMap="ResultMapIncludeComment">
        select g.*
        from goods g
        where g.id = #{id}
    </select>

    <select id="selectByExampleWithBLOBs" parameterType="com.sk.mall.entity.Goods"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="getBySearchName" resultMap="ResultMapIncludeImage">
        select *
        from goods
        where goodsName like #{keyword}
    </select>

    <select id="getAllGoods" resultMap="BaseResultMap">
        select *
        from goods
        order by upTime
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete
        from goods
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.sk.mall.entity.Goods">
        delete from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="com.sk.mall.entity.Goods">
        insert into goods (id, goodsName, price,
                           num, upTime, category,
                           detailCate, activityId, description)
        values (#{id,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER},
                #{num,jdbcType=INTEGER}, #{uptime,jdbcType=TIMESTAMP}, #{category,jdbcType=INTEGER},
                #{detailcate,jdbcType=VARCHAR}, #{activityid,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.sk.mall.entity.Goods" useGeneratedKeys="true" keyProperty="id">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsName != null">
                goodsName,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="upTime != null">
                upTime,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="categoryName != null">
                categoryName,
            </if>
            <if test="detailCate != null">
                detailCate,
            </if>
            <if test="activityId != null">
                activityId,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="isSale != null">
                isSale,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodsName != null">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="upTime != null">
                #{upTime,jdbcType=TIMESTAMP},
            </if>
            <if test="category != null">
                #{category,jdbcType=INTEGER},
            </if>
            <if test="categoryName != null">
                #{categoryName,jdbcType=INTEGER},
            </if>
            <if test="detailCate != null">
                #{detailCate,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                #{activityId,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=LONGVARCHAR},
            </if>
            <if test="isSale != null">
                #{isSale,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sk.mall.entity.Goods" resultType="java.lang.Long">
        select count(*) from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update goods
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.goodsname != null">
                goodsName = #{record.goodsname,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=INTEGER},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=INTEGER},
            </if>
            <if test="record.uptime != null">
                upTime = #{record.uptime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.category != null">
                category = #{record.category,jdbcType=INTEGER},
            </if>
            <if test="record.detailCate != null">
                detailCate = #{record.detailCate,jdbcType=VARCHAR},
            </if>
            <if test="record.activityId != null">
                activityId = #{record.activityId,jdbcType=INTEGER},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update goods
        set id = #{record.id,jdbcType=INTEGER},
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=INTEGER},
        num = #{record.num,jdbcType=INTEGER},
        upTime = #{record.uptime,jdbcType=TIMESTAMP},
        category = #{record.category,jdbcType=INTEGER},
        detailCate = #{record.detailcate,jdbcType=VARCHAR},
        activityId = #{record.activityid,jdbcType=INTEGER},
        description = #{record.description,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update goods
        set id = #{record.id,jdbcType=INTEGER},
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=INTEGER},
        num = #{record.num,jdbcType=INTEGER},
        upTime = #{record.uptime,jdbcType=TIMESTAMP},
        category = #{record.category,jdbcType=INTEGER},
        detailCate = #{record.detailcate,jdbcType=VARCHAR},
        activityId = #{record.activityid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.sk.mall.entity.Goods">
        update goods
        <set>
            <if test="goodsName != null">
                goodsName = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="upTime != null">
                upTime = #{upTime,jdbcType=TIMESTAMP},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=INTEGER},
            </if>
            <if test="categoryName != null">
                categoryName = #{categoryName,jdbcType=VARCHAR},
            </if>
            <if test="detailCate != null">
                detailCate = #{detailCate,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                activityId = #{activityId,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sk.mall.entity.Goods">
        update goods
        set goodsName    = #{goodsName,jdbcType=VARCHAR},
            price        = #{price,jdbcType=INTEGER},
            num          = #{num,jdbcType=INTEGER},
            upTime       = #{upTime,jdbcType=TIMESTAMP},
            category     = #{category,jdbcType=INTEGER},
            categoryName = #{categoryName,jdbcType=VARCHAR},
            detailCate   = #{detailCate,jdbcType=VARCHAR},
            activityId   = #{activityId,jdbcType=INTEGER},
            description  = #{description,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.sk.mall.entity.Goods">
        update goods
        set goodsName    = #{goodsname,jdbcType=VARCHAR},
            price        = #{price,jdbcType=INTEGER},
            num          = #{num,jdbcType=INTEGER},
            upTime       = #{uptime,jdbcType=TIMESTAMP},
            category     = #{category,jdbcType=INTEGER},
            categoryName = #{categoryName,jdbcType=VARCHAR},
            detailCate   = #{detailcate,jdbcType=VARCHAR},
            activityId   = #{activityid,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>


</mapper>